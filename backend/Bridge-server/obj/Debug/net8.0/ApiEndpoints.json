[
  {
    "ContainingType": "Bridge_server.Controllers.AuthController",
    "Method": "Login",
    "RelativePath": "api/Auth/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loginDto",
        "Type": "Bridge_server.DTOs.Auth.LoginDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Bridge.Controllers.MsMenuController",
    "Method": "GetAll",
    "RelativePath": "api/MsMenu",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Bridge.Controllers.MsMenuController",
    "Method": "Create",
    "RelativePath": "api/MsMenu",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "Bridge_server.DTOs.MsMenu.CreateMsMenuDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Bridge.Controllers.MsMenuController",
    "Method": "GetById",
    "RelativePath": "api/MsMenu/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Bridge.Controllers.MsMenuController",
    "Method": "Update",
    "RelativePath": "api/MsMenu/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "Bridge_server.DTOs.MsMenu.UpdateMsMenuDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Bridge.Controllers.MsMenuController",
    "Method": "Delete",
    "RelativePath": "api/MsMenu/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Bridge_server.Controllers.ProjectsController",
    "Method": "GetAll",
    "RelativePath": "api/Projects",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Bridge_server.Controllers.ProjectsController",
    "Method": "Create",
    "RelativePath": "api/Projects",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "CreateProjectDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Bridge_server.Controllers.ProjectsController",
    "Method": "GetById",
    "RelativePath": "api/Projects/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Bridge_server.Controllers.ProjectsController",
    "Method": "Update",
    "RelativePath": "api/Projects/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "UpdateProjectDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Bridge_server.Controllers.ProjectsController",
    "Method": "Delete",
    "RelativePath": "api/Projects/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Bridge_server.Controllers.TenantProjectsController",
    "Method": "GetAll",
    "RelativePath": "api/TenantProjects",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Bridge_server.Controllers.TenantProjectsController",
    "Method": "Create",
    "RelativePath": "api/TenantProjects",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "Bridge_server.DTOs.TenantProjects.CreateTenantProjectDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Bridge_server.Controllers.TenantProjectsController",
    "Method": "Delete",
    "RelativePath": "api/TenantProjects/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Bridge_server.Controllers.TenantsController",
    "Method": "GetAll",
    "RelativePath": "api/Tenants",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Bridge_server.Controllers.TenantsController",
    "Method": "Create",
    "RelativePath": "api/Tenants",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "CreateTenantDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Bridge_server.Controllers.TenantsController",
    "Method": "GetById",
    "RelativePath": "api/Tenants/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Bridge_server.Controllers.TenantsController",
    "Method": "Update",
    "RelativePath": "api/Tenants/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "UpdateTenantDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Bridge_server.Controllers.TenantsController",
    "Method": "Delete",
    "RelativePath": "api/Tenants/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Bridge_server.Controllers.UsersController",
    "Method": "GetAll",
    "RelativePath": "api/Users",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Bridge_server.Controllers.UsersController",
    "Method": "Create",
    "RelativePath": "api/Users",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "UserCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Bridge_server.Controllers.UsersController",
    "Method": "GetById",
    "RelativePath": "api/Users/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Bridge_server.Controllers.UsersController",
    "Method": "Update",
    "RelativePath": "api/Users/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "UserUpdateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Bridge_server.Controllers.UsersController",
    "Method": "Delete",
    "RelativePath": "api/Users/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Boilerplate.Controllers.UserTenantController",
    "Method": "GetAll",
    "RelativePath": "api/UserTenant",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Boilerplate.Controllers.UserTenantController",
    "Method": "Create",
    "RelativePath": "api/UserTenant",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Boilerplate.DTOs.UserTenant.UserTenantRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Boilerplate.Controllers.UserTenantController",
    "Method": "Delete",
    "RelativePath": "api/UserTenant/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Boilerplate.Controllers.UserTenantController",
    "Method": "GetByUserId",
    "RelativePath": "api/UserTenant/by-user",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Guid",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  }
]